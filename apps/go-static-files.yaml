apiVersion: v1
kind: Service
metadata:
  name: go-static-files-$DEPLOY_TAG
  namespace: $DEPLOY_TAG
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: go-static-files-$DEPLOY_TAG
---
apiVersion: v1
kind: Service
metadata:
  name: go-static-files-images-$DEPLOY_TAG
  namespace: $DEPLOY_TAG
spec:
  type: ExternalName
  externalName: "go-files-images.storage.yandexcloud.net"
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: go-static-files-images-$DEPLOY_TAG
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: go-static-files-$DEPLOY_TAG
  namespace: $DEPLOY_TAG
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: go-static-files-$DEPLOY_TAG
  minReplicas: 1
  maxReplicas: 20
  targetCPUUtilizationPercentage: 50
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $DEPLOY_TAG-ingress-static
  namespace: $DEPLOY_TAG
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/upstream-vhost: go-files-images.storage.yandexcloud.net
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  tls:
  - hosts:
    - "static.$DEPLOY_TAG.alpinadigital.rocks"
    secretName: ad-rocks-static-$DEPLOY_TAG
  rules:
  - host: "static.$DEPLOY_TAG.alpinadigital.rocks"
    http:
      paths:
      - path: /
        backend:
          serviceName: go-static-files-$DEPLOY_TAG
          servicePort: 80
      - path: "/images/.{1,}\\.(jpg|jpeg|gif|png)$"
        backend:
          serviceName: go-static-files-images-$DEPLOY_TAG
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-static-files-$DEPLOY_TAG
  namespace: $DEPLOY_TAG
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-static-files-$DEPLOY_TAG
  template:
    metadata:
      labels:
        app: go-static-files-$DEPLOY_TAG
        digest: $IMAGE_DIGEST
    spec:
      containers:
      - image: reloni/go-static-files:$DEPLOY_TAG
        imagePullPolicy: Always
        name: go-static-files-$DEPLOY_TAG
        securityContext:
          runAsNonRoot: true
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            memory: "16Mi"
            cpu: "20m"
          limits:
            memory: "32Mi"
            cpu: "100m"
        ports:
        - containerPort: 8080
          protocol: TCP
