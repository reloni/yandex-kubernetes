apiVersion: v1
kind: Service
metadata:
  name: gotest-app-$DEPLOY_TAG
  namespace: $DEPLOY_TAG
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: gotest-app-$DEPLOY_TAG
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: gotest-app-autoscaler-$DEPLOY_TAG
  namespace: $DEPLOY_TAG
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gotest-app-$DEPLOY_TAG
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $DEPLOY_TAG-ingress-wildcard
  namespace: $DEPLOY_TAG
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 120
    nginx.ingress.kubernetes.io/server-snippet: |
      server_name *.$DEPLOY_TAG.alpinadigital.rocks;
spec:
  tls:
  - hosts:
    - "$DEPLOY_TAG.alpinadigital.rocks"
    secretName: ad-rocks-widlcard
  rules:
  - host: "$DEPLOY_TAG.alpinadigital.rocks"
    http:
      paths:
      - path: /
        backend:
          serviceName: gotest-app-$DEPLOY_TAG
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gotest-app-$DEPLOY_TAG
  namespace: $DEPLOY_TAG
spec:
  replicas: 5
  selector:
    matchLabels:
      app: gotest-app-$DEPLOY_TAG
  template:
    metadata:
      labels:
        app: gotest-app-$DEPLOY_TAG
        digest: $IMAGE_DIGEST
    spec:
      containers:
      - image: reloni/goexample:$DEPLOY_TAG
        imagePullPolicy: Always
        name: gotest-app-$DEPLOY_TAG
        securityContext:
          runAsNonRoot: true
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        ports:
        - containerPort: 8080
          protocol: TCP
