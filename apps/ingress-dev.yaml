apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $NAMESPACE-ingress-wildcard
  namespace: $NAMESPACE
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.org/server-snippets: |
      gzip on;
      gzip_http_version 1.1;
      gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
      listen 443 ssl;
      ssl_certificate /etc/nginx/secrets/default;
      ssl_certificate_key /etc/nginx/secrets/default;
      ssl_ciphers NULL;
      if ($scheme = http) {
       return 301 https://$server_name$request_uri;
      }
      server_name *.$NAMESPACE.example.com;
spec:
  # tls:
  # - hosts:
  #   - "rick.example.com"
  rules:
  - host: "$NAMESPACE.example.com"
    http:
      paths:
      - path: /
        backend:
          serviceName: gotest-app-$NAMESPACE
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $NAMESPACE-ingress-nginx
  namespace: $NAMESPACE
  annotations:
    kubernetes.io/ingress.class: nginx
    #nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    #nginx.ingress.kubernetes.io/ssl-redirect: "true"
    #service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: "true"
    nginx.org/server-snippets: |
      gzip on;
      gzip_http_version 1.1;
      gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
      listen 443 ssl;
      ssl_certificate /etc/nginx/secrets/default;
      ssl_certificate_key /etc/nginx/secrets/default;
      ssl_ciphers NULL;
      if ($scheme = http) {
       return 301 https://$server_name$request_uri;
      }
spec:
  # tls:
  # - hosts:
  #   - "nginx.rick.example.com"
  rules:
  - host: "nginx.$NAMESPACE.example.com"
    http:
      paths:
      - path: /
        backend:
          serviceName: nginx-2-srv
          servicePort: 80
